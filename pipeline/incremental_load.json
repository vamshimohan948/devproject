{
	"name": "incremental_load",
	"properties": {
		"activities": [
			{
				"name": "last_update",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select tablename,LastLoadDate from tablecontrol where tablename=\r\n'@{pipeline().parameters.tablename}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_licrimental_load",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "last_modified",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select max(@{pipeline().parameters.watermark}) last_m from \n@{pipeline().parameters.tablename}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_licrimental_load",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Copy incremental data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "last_update",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "last_modified",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select *\nfrom '@{pipeline().parameters.tablename}'\nwhere '@{pipeline().parameters.watermark}' >='@{activity('last_update').output.firstRow.LastLoadDate}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_licrimental_load",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_licrimental_load",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy incremental data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SPUpdateLoadInfo]",
					"storedProcedureParameters": {
						"ModifiedDate": {
							"value": {
								"value": "@{activity('last_modified').output.firstRow.Last_m}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{pipeline().parameters.tablename}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_incremental_",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"tablename": {
				"type": "string",
				"defaultValue": "tbluser"
			},
			"watermark": {
				"type": "string",
				"defaultValue": "Last_m"
			}
		},
		"folder": {
			"name": "Framework"
		},
		"annotations": []
	}
}